version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: amazon-clone-db-prod
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: amazon_clone
    volumes:
      - mongodb_data:/data/db
    networks:
      - amazon-network

  # Python LLM Service
  python-llm:
    build:
      context: .
      target: python-llm
    container_name: amazon-clone-llm-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    depends_on:
      - mongodb
    networks:
      - amazon-network

  # Node.js Backend Server
  server:
    build:
      context: .
      target: server
    container_name: amazon-clone-server-prod
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/amazon_clone?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - LLM_SERVICE_URL=http://python-llm:8000
    depends_on:
      - mongodb
      - python-llm
    networks:
      - amazon-network

  # Next.js Frontend Client
  client:
    build:
      context: .
      target: client
    container_name: amazon-clone-client-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://your-production-backend-url.com
      - NEXT_PUBLIC_APP_URL=https://your-production-frontend-url.com
    depends_on:
      - server
    networks:
      - amazon-network

volumes:
  mongodb_data:

networks:
  amazon-network:
    driver: bridge
